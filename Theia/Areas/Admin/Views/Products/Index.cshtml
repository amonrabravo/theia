@model Product
@{
    var entityName = "Ürün";
    ViewData["Title"] = $"{entityName} Tanımları";
}

<div class="card card-primary">
    <div class="card-header d-flex">
        <div class="flex-fill">
            <i class="fa fa-list"></i>
            @entityName Listesi
        </div>
        <div>
            <a asp-action="Create" class="btn btn-link py-1 text-secondary text-decoration-none">
                <i class="fa fa-plus"></i> Yeni @entityName
            </a>
        </div>
    </div>
    <div class="card-body">
        <table id="dataTable" class="table table-striped table-bordered" style="width: 100%;">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(_ => _.Picture)</th>
                    <th>@Html.DisplayNameFor(_ => _.ProductCode)</th>
                    <th>@Html.DisplayNameFor(_ => _.Name)</th>
                    <th>@Html.DisplayNameFor(_ => _.Brand.Name)</th>
                    <th>@Html.DisplayNameFor(_ => _.PriceText)</th>
                    <th>@Html.DisplayNameFor(_ => _.Enabled)</th>
                    <th>@Html.DisplayNameFor(_ => _.Reviews)</th>
                    <th>@Html.DisplayNameFor(_ => _.Date)</th>
                    <th>@Html.DisplayNameFor(_ => _.User.Name)</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section scripts{
    <partial name="_DataTablesPartial" />
    <script>
        $(() => {
            $.fn.dataTable.ext.errMode = 'throw';
            var dataTable = $('#dataTable').DataTable({
                'processing': true,
                'serverSide': true,
                'filter': true,
                'orderMulti': false,
                'pageLength': 10,
                'order' : [2],
                'ajax': {
                    'url': '@(Url.Action("GetList"))',
                    'type': 'POST',
                    'datatype': 'json'
                },

                'columnDefs': [
                    {
                        'targets': [0,9,10],
                        'visible': true,
                        'searchable': false,
                        'orderable': false
                    }
                    ],
                'columns': [
                    {
                        'data': 'picture',
                        'name': '@(Html.DisplayNameFor(_=>_.Picture))',
                        'render': function (data, type, row) {
                            return `<img src="${row.picture ?? '/content/images/no-image-800-800.jpg'}" width="80" height="80" class="p-1 border bg-white"/>`;
                        },
                        'autoWidth': true
                    },
                    {
                        'data': 'productCode',
                        'name': '@(Html.DisplayNameFor(_=>_.ProductCode))',
                        'autoWidth': true
                    },
                    {
                        'data': 'name',
                        'name': '@(Html.DisplayNameFor(_=>_.Name))',
                        'render': function (data, type, row) {
                            return `<div class="h4">${row.name}</div><div class="text-secondary">${row.categories}</div>`;
                        },
                        'autoWidth': true,
                    },
                    {
                        'data': 'brandName',
                        'name': '@(Html.DisplayNameFor(_=>_.Brand.Name))',
                        'autoWidth': true
                    },
                    {
                        'data': 'price',
                        'name': '@(Html.DisplayNameFor(_=>_.PriceText))',
                        'autoWidth': true,
                        'className': 'text-right text-monospace'
                    },
                    {
                        'data': 'enabled',
                        'name': '@(Html.DisplayNameFor(_=>_.Enabled))',
                        'render': function (data, type, row) {
                            return row.enabled ? `<i class="fa fa-check text-success"></i>` : `<i class="fa fa-times text-danger"></i>`;
                        },
                        'autoWidth': true
                    },
                    {
                        'data': 'reviews',
                        'name': '@(Html.DisplayNameFor(_=>_.Reviews))',
                        'autoWidth': true,
                        'className': 'text-right text-monospace'
                    },
                    {
                        'data': 'date',
                        'name': '@(Html.DisplayNameFor(_=>_.Date))',
                        'autoWidth': true
                    },
                    {
                        'data': 'userName',
                        'name': '@(Html.DisplayNameFor(_=>_.User.Name))',
                        'autoWidth': true
                    },
                    {
                        'data': null,
                        'render': function (data, type, row) {
                            return `<a href="Products/Edit/${row.id}" class="text-secondary mr-2"><i class="fa fa-edit"></i></a>`;
                        },
                        'autoWidth': true,
                        'className': 'text-center'
                    },
                    {
                        'data': null,
                        'render': function (data, type, row) {
                            return `<a href="Products/Remove/${row.id}" data-name="${row.name}" class="text-secondary remove-btn"><i class="fa fa-trash"></i></a>`;
                        },
                        'autoWidth': true,
                        'className' : 'text-center'
                    },
                ],


            });

            dataTable.on('draw', () => {
                $('th').removeClass("text-monospace").removeClass("text-right");
                $('.remove-btn').on('click', function () {
                    const name = $(this).attr('data-name');
                    const href = $(this).attr('href');
                    removeConfirm.fire({
                        text: name + ' isimli @Html.Raw(entityName.ToLower()) TAMAMEN silinecektir. Silme işlemine devam etmek istiyormusunuz?'
                    })
                        .then(result => {
                            if (result.value) {
                                window.location = href;
                            }
                        });
                    return false;
                });
            });
         });
    </script>
}
